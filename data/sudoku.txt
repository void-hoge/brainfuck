grid[81];
grid[0] = 5;
grid[1] = 3;
grid[2] = 0;
grid[3] = 0;
grid[4] = 7;
grid[5] = 0;
grid[6] = 0;
grid[7] = 0;
grid[8] = 0;

grid[9]  = 6;
grid[10] = 0;
grid[11] = 0;
grid[12] = 1;
grid[13] = 9;
grid[14] = 5;
grid[15] = 0;
grid[16] = 0;
grid[17] = 0;

grid[18] = 0;
grid[19] = 9;
grid[20] = 8;
grid[21] = 0;
grid[22] = 0;
grid[23] = 0;
grid[24] = 0;
grid[25] = 6;
grid[26] = 0;


grid[27] = 8;
grid[28] = 0;
grid[29] = 0;
grid[30] = 0;
grid[31] = 6;
grid[32] = 0;
grid[33] = 0;
grid[34] = 0;
grid[35] = 3;


grid[36] = 4;
grid[37] = 0;
grid[38] = 0;
grid[39] = 8;
grid[40] = 0;
grid[41] = 3;
grid[42] = 0;
grid[43] = 0;
grid[44] = 1;


grid[45] = 7;
grid[46] = 0;
grid[47] = 0;
grid[48] = 0;
grid[49] = 2;
grid[50] = 0;
grid[51] = 0;
grid[52] = 0;
grid[53] = 6;

grid[54] = 0;
grid[55] = 6;
grid[56] = 0;
grid[57] = 0;
grid[58] = 0;
grid[59] = 0;
grid[60] = 2;
grid[61] = 8;
grid[62] = 0;

grid[63] = 0;
grid[64] = 0;
grid[65] = 0;
grid[66] = 4;
grid[67] = 1;
grid[68] = 9;
grid[69] = 0;
grid[70] = 0;
grid[71] = 5;

grid[72] = 0;
grid[73] = 0;
grid[74] = 0;
grid[75] = 0;
grid[76] = 8;
grid[77] = 0;
grid[78] = 0;
grid[79] = 7;
grid[80] = 9;

for (i = 0; i < 9; i += 1) {
    if (i % 3 == 0) {
        putchar('+');
        for (j = 0; j < 3; j += 1) {
            for (k = 0; k < 3; k += 1) {
                putchar('-'); putchar('-');
            }
            putchar('+');
        }
        putchar('\n');
    }
    for (j = 0; j < 9; j += 1) {
        if (j % 3 == 0) {
            putchar('|');
        }
        if (grid[i * 9 + j] == 0) {
            putchar(' ');
        } else {
            putint(grid[i * 9 + j]);
        }
        putchar(' ');
    }
    putchar('|');
    putchar('\n');
}
putchar('+');
for (i = 0; i < 3; i += 1) {
    for (j = 0; j < 3; j += 1) {
        putchar('-'); putchar('-');
    }
    putchar('+');
}
putchar('\n');

emptycells[9 * 9 * 2];
numempty = 0;
for (row = 0; row < 9; row += 1) {
    for (col = 0; col < 9; col += 1) {
        if (grid[row * 9 + col] == 0) {
            emptycells[numempty * 2 + 0] = row;
            emptycells[numempty * 2 + 1] = col;
            numempty += 1;
        }
    }
}
triednumbers[9 * 9];
k = 0;

while (k != 255 & k < numempty) {
    row = emptycells[k * 2 + 0];
    col = emptycells[k * 2 + 1];
    
    found = 0;
    num = triednumbers[k] + 1;

    while (num <= 9 & !found) {
        safe = 1;
        x = 0;
        while (x < 9 & safe) {
            if (grid[row * 9 + x] == num) {
                safe = 0;
            }
            x += 1;
        }
        x = 0;
        while (x < 9 & safe) {
            if (grid[x * 9 + col] == num) {
                safe = 0;
            }
            x += 1;
        }
        if (safe) {
            startrow = row - row % 3;
            startcol = col - col % 3;
            i = 0;
            while (i < 3 & safe) {
                j = 0;
                while (j < 3 & safe) {
                    if (grid[(startrow + i) * 9 + startcol + j] == num) {
                        safe = 0;
                    }
                    j += 1;
                }
                i += 1;
            }
        }
        if (safe) {
            grid[row * 9 + col] = num;
            triednumbers[k] = num;
            found = 1;
            k += 1;
        }else {
            num += 1;
        }
    }
    if (!found) {
        grid[row * 9 + col] = 0;
        triednumbers[k] = 0;
        k -= 1;
    }
}

if (k == numempty) {
    for (i = 0; i < 9; i += 1) {
        if (i % 3 == 0) {
            putchar('+');
            for (j = 0; j < 3; j += 1) {
                for (k = 0; k < 3; k += 1) {
                    putchar('-'); putchar('-');
                }
                putchar('+');
            }
            putchar('\n');
        }
        for (j = 0; j < 9; j += 1) {
            if (j % 3 == 0) {
                putchar('|');
            }
            if (grid[i * 9 + j] == 0) {
                putchar(' ');
            } else {
                putint(grid[i * 9 + j]);
            }
            putchar(' ');
        }
        putchar('|');
        putchar('\n');
    }
    putchar('+');
    for (i = 0; i < 3; i += 1) {
        for (j = 0; j < 3; j += 1) {
            putchar('-'); putchar('-');
        }
        putchar('+');
    }
    putchar('\n');
} else {
    putchar('n');
    putchar('o');
    putchar(' ');
    putchar('s');
    putchar('o');
    putchar('l');
    putchar('u');
    putchar('t');
    putchar('i');
    putchar('o');
    putchar('n');
    putchar('\n');
}
